version: '3'

services:

  crossbar:
    # use the arm version on raspberry pi
    image: crossbario/crossbar-armhf
    container_name: crossbar
    restart: always
    ports:
      - "8080:8080"

  admin:
    image: auv_control
    restart: always
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000  # need to run external port

  gps:
    image: auv_control
    restart: always
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
    command: python manage.py rungps
    links:
      - crossbar
    depends_on:
      - crossbar

  ahrs:
    image: auv_control
    restart: always
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
    command: python manage.py runahrs
    links:
      - crossbar
    depends_on:
      - crossbar

  auvcontrol:
    image: auv_control
    restart: always
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
      - SYSFS_PWM_PATH_BASE=/var/pwm/
      - SYSFS_PWM_EXPORT_PATH=/var/pwm/export
      - SYSFS_PWM_UNEXPORT_PATH=/var/pwm/unexport
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
      # need to mount host's pwm directory into writable dir
      - /sys/class/pwm/pwmchip0:/var/pwm
    command: python manage.py runauv
    links:
      - crossbar
    depends_on:
      - crossbar

  rccontrol:
    image: auv_control
    restart: always
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
    command: python manage.py runrc
    links:
      - crossbar
    depends_on:
      - crossbar

  nav:
    image: auv_control
    restart: always
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
    command: python manage.py runnav
    links:
      - crossbar
    depends_on:
      - crossbar
      - ahrs
      - gps

  remoteproxy:
    image: auv_control
    restart: always
    volumes:
      - .:/code
      - logvolume01:/var/log
      - dbdata:/data
    environment:
      - DB_NAME=/data/db.sqlite3
      - PI=True
    command: python manage.py runremote
    links:
      - crossbar
    depends_on:
      - crossbar

volumes:
  logvolume01: {}

  # use dbdata volume to persist model data between container recreation
  dbdata:
    driver: local
